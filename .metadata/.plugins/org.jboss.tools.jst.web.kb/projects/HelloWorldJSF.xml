<?xml version="1.0" encoding="UTF-8"?>
<kb-project>
 <depends-on-projects/>
 <used-by-projects/>
 <paths>
  <path value="D:/Programs/jstl-lib-1.2/jstl-api-1.2.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/catalina.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-jdbc.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/myfaces-api-1.2.9.jar">
   <libraries>
    <library class="myfaces">
     <id class="string" value="FileSystems/lib-myfaces-api-1.2.9.jar/meta-inf/myfaces-metadata.xml/f"/>
     <attributes>
      <entry name="uri">
       <value-info value="http://java.sun.com/jsf/core"/>
      </entry>
     </attributes>
     <component class="myfaces">
      <id class="string" value="selectItem"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.SelectItem"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a single SelectItem with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UISelectItem"/>
       </entry>
       <entry name="name">
        <value-info value="selectItem"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemDescription"/>
       <attributes>
        <entry name="description">
         <value-info value="For use in development tools"/>
        </entry>
        <entry name="name">
         <value-info value="itemDescription"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemValue"/>
       <attributes>
        <entry name="description">
         <value-info value="The value for this Item"/>
        </entry>
        <entry name="name">
         <value-info value="itemValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemLabel"/>
       <attributes>
        <entry name="description">
         <value-info value="The string which will be presented to the user for this option"/>
        </entry>
        <entry name="name">
         <value-info value="itemLabel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="The escape setting for the label of this selection item"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemDisabled"/>
       <attributes>
        <entry name="description">
         <value-info value="Determine whether this item can be chosen by the user"/>
        </entry>
        <entry name="name">
         <value-info value="itemDisabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="facet"/>
      <attributes>
       <entry name="description">
        <value-info value="This tag adds its child as a facet of the nearest parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.webapp.FacetTag"/>
       </entry>
       <entry name="name">
        <value-info value="facet"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="name"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The name of the facet to be created"/>
        </entry>
        <entry name="name">
         <value-info value="name"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="param"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.Parameter"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a parameter name-value pair with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UIParameter"/>
       </entry>
       <entry name="name">
        <value-info value="param"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="name"/>
       <attributes>
        <entry name="description">
         <value-info value="The name under which the value is stored"/>
        </entry>
        <entry name="name">
         <value-info value="name"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="subview"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.NamingContainer"/>
       </entry>
       <entry name="description">
        <value-info value="Base class for components that provide a new &quot;namespace&quot; for the ids of their&#xa;child components"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UINamingContainer"/>
       </entry>
       <entry name="name">
        <value-info value="subview"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectItems"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.SelectItems"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a set of selection list items with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UISelectItems"/>
       </entry>
       <entry name="name">
        <value-info value="selectItems"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="view"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.ViewRoot"/>
       </entry>
       <entry name="description">
        <value-info value="Creates a JSF View, which is a container that holds all of the components&#xa;that are part of the view"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UIViewRoot"/>
       </entry>
       <entry name="name">
        <value-info value="view"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="DO NOT USE"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="renderKitId"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines what renderkit should be used to render this view"/>
        </entry>
        <entry name="name">
         <value-info value="renderKitId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="locale"/>
       <attributes>
        <entry name="description">
         <value-info value="The locale for this view"/>
        </entry>
        <entry name="name">
         <value-info value="locale"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="afterPhase"/>
       <attributes>
        <entry name="description">
         <value-info value="MethodBinding pointing to a method that takes a&#xa;javax"/>
        </entry>
        <entry name="name">
         <value-info value="afterPhase"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="beforePhase"/>
       <attributes>
        <entry name="description">
         <value-info value="MethodBinding pointing to a method that takes a&#xa;javax"/>
        </entry>
        <entry name="name">
         <value-info value="beforePhase"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="DO NOT USE"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="viewId"/>
       <attributes>
        <entry name="description">
         <value-info value="A unique identifier for the &quot;template&quot; from which this view was generated"/>
        </entry>
        <entry name="name">
         <value-info value="viewId"/>
        </entry>
       </attributes>
      </attribute>
     </component>
    </library>
    <library class="myfaces">
     <id class="string" value="FileSystems/lib-myfaces-api-1.2.9.jar/meta-inf/myfaces-metadata.xml/h"/>
     <attributes>
      <entry name="uri">
       <value-info value="http://java.sun.com/jsf/html"/>
      </entry>
     </attributes>
     <component class="myfaces">
      <id class="string" value="outputLabel"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputLabel"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML label element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputLabel"/>
       </entry>
       <entry name="name">
        <value-info value="outputLabel"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="for"/>
       <attributes>
        <entry name="description">
         <value-info value="The client ID of the target input element of this label"/>
        </entry>
        <entry name="name">
         <value-info value="for"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputHidden"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputHidden"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as an HTML input tag with its type set to &quot;hidden&quot;"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputHidden"/>
       </entry>
       <entry name="name">
        <value-info value="inputHidden"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="graphicImage"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIGraphic"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlGraphicImage"/>
       </entry>
       <entry name="description">
        <value-info value="Renders an HTML img element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlGraphicImage"/>
       </entry>
       <entry name="name">
        <value-info value="graphicImage"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="usemap"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies an image map to use with this image"/>
        </entry>
        <entry name="name">
         <value-info value="usemap"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ismap"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies server-side image map handling for this image"/>
        </entry>
        <entry name="name">
         <value-info value="ismap"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="height"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Overrides the natural height of this image, by specifying height in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="height"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The URL of the image"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Overrides the natural width of this image, by specifying width in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="longdesc"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A link to a long description of the image"/>
        </entry>
        <entry name="name">
         <value-info value="longdesc"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="url"/>
       <attributes>
        <entry name="description">
         <value-info value="An alias for the &quot;value&quot; attribute"/>
        </entry>
        <entry name="name">
         <value-info value="url"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="commandLink"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UICommand"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlCommandLink"/>
       </entry>
       <entry name="description">
        <value-info value="This tag renders as an HTML a element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlCommandLink"/>
       </entry>
       <entry name="name">
        <value-info value="commandLink"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="actionListener"/>
       <attributes>
        <entry name="name">
         <value-info value="actionListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rev"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The type(s) describing the reverse link for the linked&#xa;resource"/>
        </entry>
        <entry name="name">
         <value-info value="rev"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="hreflang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The language of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="hreflang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The text to display to the user for this command component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="action"/>
       <attributes>
        <entry name="description">
         <value-info value="The action to take when this command is invoked"/>
        </entry>
        <entry name="name">
         <value-info value="action"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="charset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the character encoding of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="charset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="shape"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The shape of a region in a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="shape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events&#xa;should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="coords"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The coordinates of regions within a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="coords"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rel"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The relationship between the current document and&#xa;the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="rel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneListbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneListbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneListbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneListbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="see JSF Spec"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputTextarea"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputTextarea"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML textarea element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputTextarea"/>
       </entry>
       <entry name="name">
        <value-info value="inputTextarea"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cols"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The width of this element, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="cols"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rows"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The height of this element, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="rows"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="commandButton"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UICommand"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlCommandButton"/>
       </entry>
       <entry name="description">
        <value-info value="This tag renders as an HTML input element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlCommandButton"/>
       </entry>
       <entry name="name">
        <value-info value="commandButton"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="actionListener"/>
       <attributes>
        <entry name="name">
         <value-info value="actionListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The text to display to the user for this command component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="action"/>
       <attributes>
        <entry name="description">
         <value-info value="The action to take when this command is invoked"/>
        </entry>
        <entry name="name">
         <value-info value="action"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="image"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The URL of an image that renders in place of the button"/>
        </entry>
        <entry name="name">
         <value-info value="image"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events&#xa;should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="messages"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIMessages"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlMessages"/>
       </entry>
       <entry name="description">
        <value-info value="Renders all or some FacesMessages depending on the &quot;for&quot; and&#xa;&quot;globalOnly&quot; attributes"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlMessages"/>
       </entry>
       <entry name="name">
        <value-info value="messages"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="globalOnly"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether only messages (FacesMessage objects) not associated with a&#xa;specific component should be displayed, ie whether messages should be ignored&#xa;if they are attached to a particular component"/>
        </entry>
        <entry name="name">
         <value-info value="globalOnly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showSummary"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the summary information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showSummary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showDetail"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the detailed information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showDetail"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="The layout: &quot;table&quot; or &quot;list&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tooltip"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the message summary will be rendered as a tooltip (i"/>
        </entry>
        <entry name="name">
         <value-info value="tooltip"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnStyle"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectBooleanCheckbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectBoolean"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectBooleanCheckbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose a &quot;true&quot; or &quot;false&quot; value, presented as a&#xa;checkbox"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectBooleanCheckbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectBooleanCheckbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputText"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputText"/>
       </entry>
       <entry name="description">
        <value-info value="Renders the value of the associated UIOutput component"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputText"/>
       </entry>
       <entry name="name">
        <value-info value="outputText"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyMenu"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyMenu"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of available&#xa;options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyMenu"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyMenu"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputSecret"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputSecret"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as an HTML input tag with its type set to &quot;password&quot;"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputSecret"/>
       </entry>
       <entry name="name">
        <value-info value="inputSecret"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="redisplay"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the value will be re-sent (in plaintext) when the form&#xa;is rerendered (see JSF"/>
        </entry>
        <entry name="name">
         <value-info value="redisplay"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="maxlength"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The maximum number of characters allowed to be entered"/>
        </entry>
        <entry name="name">
         <value-info value="maxlength"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="autocomplete"/>
       <attributes>
        <entry name="description">
         <value-info value="If the value of this attribute is &quot;off&quot;, render &quot;off&quot; as the value of the attribute"/>
        </entry>
        <entry name="name">
         <value-info value="autocomplete"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The initial width of this control, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneRadio"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneRadio"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneRadio"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneRadio"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="Orientation of the options list"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="Width in pixels of the border to be drawn around the table containing the options list"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="dataTable"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIData"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlDataTable"/>
       </entry>
       <entry name="description">
        <value-info value="This component renders an HTML table element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlDataTable"/>
       </entry>
       <entry name="name">
        <value-info value="dataTable"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="summary"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a summary of the contents of the table, for&#xa;accessibility purposes"/>
        </entry>
        <entry name="name">
         <value-info value="summary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The CSS class to be applied to the Caption"/>
        </entry>
        <entry name="name">
         <value-info value="captionStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="var"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the name of the request-scope variable that will hold the current row during iteration"/>
        </entry>
        <entry name="name">
         <value-info value="var"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellpadding"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of empty space between the cell border and&#xa;its contents"/>
        </entry>
        <entry name="name">
         <value-info value="cellpadding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellspacing"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of space between the cells of the table"/>
        </entry>
        <entry name="name">
         <value-info value="cellspacing"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="bgcolor"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The background color of this element"/>
        </entry>
        <entry name="name">
         <value-info value="bgcolor"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to header cells"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="An EL expression that specifies the data model that backs this table"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to footer cells"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the desired width of the table, as a pixel length or&#xa;a percentage of available space"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionClass"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to all captions"/>
        </entry>
        <entry name="name">
         <value-info value="captionClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rules"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls how rules are rendered between cells"/>
        </entry>
        <entry name="name">
         <value-info value="rules"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rows"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the maximum number of rows of data to be displayed"/>
        </entry>
        <entry name="name">
         <value-info value="rows"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="frame"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls what part of the frame that surrounds a table is&#xa;visible"/>
        </entry>
        <entry name="name">
         <value-info value="frame"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columnClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each column"/>
        </entry>
        <entry name="name">
         <value-info value="columnClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rowClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each row"/>
        </entry>
        <entry name="name">
         <value-info value="rowClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="first"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the index of the first row to be displayed, starting from 0"/>
        </entry>
        <entry name="name">
         <value-info value="first"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="panelGrid"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIPanel"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlPanelGrid"/>
       </entry>
       <entry name="description">
        <value-info value="This element renders as an HTML table with specified number of columns"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlPanelGrid"/>
       </entry>
       <entry name="name">
        <value-info value="panelGrid"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="summary"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a summary of the contents of the table, for&#xa;accessibility purposes"/>
        </entry>
        <entry name="name">
         <value-info value="summary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The CSS class to be applied to the Caption"/>
        </entry>
        <entry name="name">
         <value-info value="captionStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columns"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies the number of columns in the grid"/>
        </entry>
        <entry name="name">
         <value-info value="columns"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellpadding"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of empty space between the cell border and&#xa;its contents"/>
        </entry>
        <entry name="name">
         <value-info value="cellpadding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellspacing"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of space between the cells of the table"/>
        </entry>
        <entry name="name">
         <value-info value="cellspacing"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="bgcolor"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The background color of this element"/>
        </entry>
        <entry name="name">
         <value-info value="bgcolor"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to header cells"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to footer cells"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the desired width of the table, as a pixel length or&#xa;a percentage of available space"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionClass"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to all captions"/>
        </entry>
        <entry name="name">
         <value-info value="captionClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rules"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls how rules are rendered between cells"/>
        </entry>
        <entry name="name">
         <value-info value="rules"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="frame"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls what part of the frame that surrounds a table is&#xa;visible"/>
        </entry>
        <entry name="name">
         <value-info value="frame"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columnClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each column"/>
        </entry>
        <entry name="name">
         <value-info value="columnClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rowClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each row"/>
        </entry>
        <entry name="name">
         <value-info value="rowClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="form"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIForm"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlForm"/>
       </entry>
       <entry name="description">
        <value-info value="Renders an HTML form element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlForm"/>
       </entry>
       <entry name="name">
        <value-info value="form"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="accept"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a comma-separated list of content types that the&#xa;server processing this form can handle"/>
        </entry>
        <entry name="name">
         <value-info value="accept"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="prependId"/>
       <attributes>
        <entry name="name">
         <value-info value="prependId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enctype"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The content type used to submit this form to the server"/>
        </entry>
        <entry name="name">
         <value-info value="enctype"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="acceptcharset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The list of character encodings accepted by the server for this&#xa;form"/>
        </entry>
        <entry name="name">
         <value-info value="acceptcharset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onsubmit"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when this form is submitted"/>
        </entry>
        <entry name="name">
         <value-info value="onsubmit"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onreset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when this form is reset"/>
        </entry>
        <entry name="name">
         <value-info value="onreset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputFormat"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputFormat"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as text, applying the child f:param values to the value attribute as a MessageFormat string"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputFormat"/>
       </entry>
       <entry name="name">
        <value-info value="outputFormat"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneMenu"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneMenu"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneMenu"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneMenu"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="message"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIMessage"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlMessage"/>
       </entry>
       <entry name="description">
        <value-info value="Renders text displaying information about the first FacesMessage&#xa;that is assigned to the component referenced by the &quot;for&quot; attribute"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlMessage"/>
       </entry>
       <entry name="name">
        <value-info value="message"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="showSummary"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the summary information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showSummary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="for"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The ID of the component whose attached FacesMessage object (if present)&#xa;should be diplayed by this component"/>
        </entry>
        <entry name="name">
         <value-info value="for"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showDetail"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the detailed information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showDetail"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tooltip"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the message summary will be rendered as a tooltip (i"/>
        </entry>
        <entry name="name">
         <value-info value="tooltip"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnStyle"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputText"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputText"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML input element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputText"/>
       </entry>
       <entry name="name">
        <value-info value="inputText"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="maxlength"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The maximum number of characters allowed to be entered"/>
        </entry>
        <entry name="name">
         <value-info value="maxlength"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="autocomplete"/>
       <attributes>
        <entry name="description">
         <value-info value="If the value of this attribute is &quot;off&quot;, render &quot;off&quot; as the value of the attribute"/>
        </entry>
        <entry name="name">
         <value-info value="autocomplete"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The initial width of this control, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="column"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIColumn"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlColumn"/>
       </entry>
       <entry name="description">
        <value-info value="Creates a UIComponent that represents a single column of data within a parent UIData component"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlColumn"/>
       </entry>
       <entry name="name">
        <value-info value="column"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for the header"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for the footer"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="panelGroup"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIPanel"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlPanelGroup"/>
       </entry>
       <entry name="description">
        <value-info value="This element is used to group other components where the specification requires one child element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlPanelGroup"/>
       </entry>
       <entry name="name">
        <value-info value="panelGroup"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="The type of layout markup to use when rendering this group"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyListbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyListbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of&#xa;available options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyListbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyListbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="see JSF Spec"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputLink"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputLink"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML a element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputLink"/>
       </entry>
       <entry name="name">
        <value-info value="outputLink"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="rev"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The type(s) describing the reverse link for the linked&#xa;resource"/>
        </entry>
        <entry name="name">
         <value-info value="rev"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="hreflang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The language of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="hreflang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="charset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the character encoding of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="charset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="shape"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The shape of a region in a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="shape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="coords"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The coordinates of regions within a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="coords"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rel"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The relationship between the current document and&#xa;the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="rel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyCheckbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyCheckbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of available options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyCheckbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyCheckbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="Controls the layout direction of the child elements"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
    </library>
   </libraries>
  </path>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-coyote.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-i18n-fr.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/myfaces-impl-1.2.9.jar">
   <libraries>
    <library class="myfaces">
     <id class="string" value="FileSystems/lib-myfaces-impl-1.2.9.jar/meta-inf/myfaces-metadata.xml/f"/>
     <attributes>
      <entry name="uri">
       <value-info value="http://java.sun.com/jsf/core"/>
      </entry>
     </attributes>
     <component class="myfaces">
      <id class="string" value="selectItem"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.SelectItem"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a single SelectItem with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UISelectItem"/>
       </entry>
       <entry name="name">
        <value-info value="selectItem"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemDescription"/>
       <attributes>
        <entry name="description">
         <value-info value="For use in development tools"/>
        </entry>
        <entry name="name">
         <value-info value="itemDescription"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemValue"/>
       <attributes>
        <entry name="description">
         <value-info value="The value for this Item"/>
        </entry>
        <entry name="name">
         <value-info value="itemValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemLabel"/>
       <attributes>
        <entry name="description">
         <value-info value="The string which will be presented to the user for this option"/>
        </entry>
        <entry name="name">
         <value-info value="itemLabel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="The escape setting for the label of this selection item"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="itemDisabled"/>
       <attributes>
        <entry name="description">
         <value-info value="Determine whether this item can be chosen by the user"/>
        </entry>
        <entry name="name">
         <value-info value="itemDisabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="actionListener"/>
      <attributes>
       <entry name="description">
        <value-info value="This tag creates an instance of the specified ActionListener, and&#xa;associates it with the nearest parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.ActionListenerTag"/>
       </entry>
       <entry name="name">
        <value-info value="actionListener"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="Value binding expression that evaluates to an object that&#xa;implements javax"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="The fully qualified class name of the ActionListener class"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="verbatim"/>
      <attributes>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.VerbatimTag"/>
       </entry>
       <entry name="name">
        <value-info value="verbatim"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Flag indicating whether or not this component should be rendered&#xa;(during Render Response Phase), or processed on any subsequent&#xa;form submit"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, generated markup is escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="facet"/>
      <attributes>
       <entry name="description">
        <value-info value="This tag adds its child as a facet of the nearest parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.webapp.FacetTag"/>
       </entry>
       <entry name="name">
        <value-info value="facet"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="name"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The name of the facet to be created"/>
        </entry>
        <entry name="name">
         <value-info value="name"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="param"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.Parameter"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a parameter name-value pair with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UIParameter"/>
       </entry>
       <entry name="name">
        <value-info value="param"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="name"/>
       <attributes>
        <entry name="description">
         <value-info value="The name under which the value is stored"/>
        </entry>
        <entry name="name">
         <value-info value="name"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="setPropertyActionListener"/>
      <attributes>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.SetPropertyActionListenerTag"/>
       </entry>
       <entry name="name">
        <value-info value="setPropertyActionListener"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="ValueExpression for the value of the target attribute"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="ValueExpression for the destination of the value attribute"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="validator"/>
      <attributes>
       <entry name="description">
        <value-info value="Creates a validator and associates it with the nearest parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.ValidatorImplTag"/>
       </entry>
       <entry name="name">
        <value-info value="validator"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="validatorId"/>
       <attributes>
        <entry name="description">
         <value-info value="The registered ID of the desired Validator"/>
        </entry>
        <entry name="name">
         <value-info value="validatorId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="A ValueExpression that evaluates to an implementation of&#xa;the javax"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="attribute"/>
      <attributes>
       <entry name="description">
        <value-info value="This tag associates an attribute with the nearest parent&#xa;UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.AttributeTag"/>
       </entry>
       <entry name="name">
        <value-info value="attribute"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="name"/>
       <attributes>
        <entry name="description">
         <value-info value="The name of the attribute"/>
        </entry>
        <entry name="name">
         <value-info value="name"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The attribute's value"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="valueChangeListener"/>
      <attributes>
       <entry name="description">
        <value-info value="Adds the specified ValueChangeListener to the nearest parent UIComponent&#xa;(which is expected to be a UIInput component)"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.ValueChangeListenerTag"/>
       </entry>
       <entry name="name">
        <value-info value="valueChangeListener"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="Value binding expression that evaluates to an implementation of&#xa;the javax"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="The name of a Java class that implements ValueChangeListener"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="subview"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.NamingContainer"/>
       </entry>
       <entry name="description">
        <value-info value="Base class for components that provide a new &quot;namespace&quot; for the ids of their&#xa;child components"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UINamingContainer"/>
       </entry>
       <entry name="name">
        <value-info value="subview"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="loadBundle"/>
      <attributes>
       <entry name="description">
        <value-info value="Loads a resource bundle and saves it as a variable in the request scope"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.LoadBundleTag"/>
       </entry>
       <entry name="name">
        <value-info value="loadBundle"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="basename"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The base name of the resource bundle"/>
        </entry>
        <entry name="name">
         <value-info value="basename"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="var"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The name of the variable in request scope that the resources&#xa;are saved to"/>
        </entry>
        <entry name="name">
         <value-info value="var"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="converter"/>
      <attributes>
       <entry name="description">
        <value-info value="This tag creates an instance of the specified Converter, and&#xa;associates it with the nearest parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.ConverterImplTag"/>
       </entry>
       <entry name="name">
        <value-info value="converter"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="converterId"/>
       <attributes>
        <entry name="description">
         <value-info value="The converter's registered ID"/>
        </entry>
        <entry name="name">
         <value-info value="converterId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="A ValueExpression that evaluates to a Converter"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="phaseListener"/>
      <attributes>
       <entry name="description">
        <value-info value="Register a PhaseListener instance"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="org.apache.myfaces.taglib.core.PhaseListenerTag"/>
       </entry>
       <entry name="name">
        <value-info value="phaseListener"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="Value binding expression that evaluates to a PhaseListener"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="Class name of the PhaseListener to be created and registered"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="view"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.ViewRoot"/>
       </entry>
       <entry name="description">
        <value-info value="Creates a JSF View, which is a container that holds all of the components&#xa;that are part of the view"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="JSP"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UIViewRoot"/>
       </entry>
       <entry name="name">
        <value-info value="view"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="DO NOT USE"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="renderKitId"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines what renderkit should be used to render this view"/>
        </entry>
        <entry name="name">
         <value-info value="renderKitId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="locale"/>
       <attributes>
        <entry name="description">
         <value-info value="The locale for this view"/>
        </entry>
        <entry name="name">
         <value-info value="locale"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="afterPhase"/>
       <attributes>
        <entry name="description">
         <value-info value="MethodBinding pointing to a method that takes a&#xa;javax"/>
        </entry>
        <entry name="name">
         <value-info value="afterPhase"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="beforePhase"/>
       <attributes>
        <entry name="description">
         <value-info value="MethodBinding pointing to a method that takes a&#xa;javax"/>
        </entry>
        <entry name="name">
         <value-info value="beforePhase"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="DO NOT USE"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="viewId"/>
       <attributes>
        <entry name="description">
         <value-info value="A unique identifier for the &quot;template&quot; from which this view was generated"/>
        </entry>
        <entry name="name">
         <value-info value="viewId"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectItems"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIComponentBase"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.SelectItems"/>
       </entry>
       <entry name="description">
        <value-info value="This tag associates a set of selection list items with the nearest&#xa;parent UIComponent"/>
       </entry>
       <entry name="bodycontent">
        <value-info value="empty"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.UISelectItems"/>
       </entry>
       <entry name="name">
        <value-info value="selectItems"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="Disable this property; although this class extends a base-class that&#xa;defines a read/write rendered property, this particular subclass&#xa;does not support setting it"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
    </library>
    <library class="myfaces">
     <id class="string" value="FileSystems/lib-myfaces-impl-1.2.9.jar/meta-inf/myfaces-metadata.xml/h"/>
     <attributes>
      <entry name="uri">
       <value-info value="http://java.sun.com/jsf/html"/>
      </entry>
     </attributes>
     <component class="myfaces">
      <id class="string" value="outputLabel"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputLabel"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML label element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputLabel"/>
       </entry>
       <entry name="name">
        <value-info value="outputLabel"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="for"/>
       <attributes>
        <entry name="description">
         <value-info value="The client ID of the target input element of this label"/>
        </entry>
        <entry name="name">
         <value-info value="for"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputHidden"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputHidden"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as an HTML input tag with its type set to &quot;hidden&quot;"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputHidden"/>
       </entry>
       <entry name="name">
        <value-info value="inputHidden"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="graphicImage"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIGraphic"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlGraphicImage"/>
       </entry>
       <entry name="description">
        <value-info value="Renders an HTML img element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlGraphicImage"/>
       </entry>
       <entry name="name">
        <value-info value="graphicImage"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="usemap"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies an image map to use with this image"/>
        </entry>
        <entry name="name">
         <value-info value="usemap"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ismap"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies server-side image map handling for this image"/>
        </entry>
        <entry name="name">
         <value-info value="ismap"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="height"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Overrides the natural height of this image, by specifying height in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="height"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The URL of the image"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Overrides the natural width of this image, by specifying width in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="longdesc"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A link to a long description of the image"/>
        </entry>
        <entry name="name">
         <value-info value="longdesc"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="url"/>
       <attributes>
        <entry name="description">
         <value-info value="An alias for the &quot;value&quot; attribute"/>
        </entry>
        <entry name="name">
         <value-info value="url"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="commandLink"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UICommand"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlCommandLink"/>
       </entry>
       <entry name="description">
        <value-info value="This tag renders as an HTML a element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlCommandLink"/>
       </entry>
       <entry name="name">
        <value-info value="commandLink"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="actionListener"/>
       <attributes>
        <entry name="name">
         <value-info value="actionListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rev"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The type(s) describing the reverse link for the linked&#xa;resource"/>
        </entry>
        <entry name="name">
         <value-info value="rev"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="hreflang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The language of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="hreflang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The text to display to the user for this command component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="action"/>
       <attributes>
        <entry name="description">
         <value-info value="The action to take when this command is invoked"/>
        </entry>
        <entry name="name">
         <value-info value="action"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="charset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the character encoding of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="charset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="shape"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The shape of a region in a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="shape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events&#xa;should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="coords"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The coordinates of regions within a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="coords"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rel"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The relationship between the current document and&#xa;the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="rel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneListbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneListbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneListbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneListbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="see JSF Spec"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputTextarea"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputTextarea"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML textarea element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputTextarea"/>
       </entry>
       <entry name="name">
        <value-info value="inputTextarea"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cols"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The width of this element, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="cols"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rows"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The height of this element, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="rows"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="commandButton"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UICommand"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlCommandButton"/>
       </entry>
       <entry name="description">
        <value-info value="This tag renders as an HTML input element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlCommandButton"/>
       </entry>
       <entry name="name">
        <value-info value="commandButton"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="actionListener"/>
       <attributes>
        <entry name="name">
         <value-info value="actionListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="The text to display to the user for this command component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="action"/>
       <attributes>
        <entry name="description">
         <value-info value="The action to take when this command is invoked"/>
        </entry>
        <entry name="name">
         <value-info value="action"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="image"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The URL of an image that renders in place of the button"/>
        </entry>
        <entry name="name">
         <value-info value="image"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events&#xa;should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="messages"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIMessages"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlMessages"/>
       </entry>
       <entry name="description">
        <value-info value="Renders all or some FacesMessages depending on the &quot;for&quot; and&#xa;&quot;globalOnly&quot; attributes"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlMessages"/>
       </entry>
       <entry name="name">
        <value-info value="messages"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="globalOnly"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether only messages (FacesMessage objects) not associated with a&#xa;specific component should be displayed, ie whether messages should be ignored&#xa;if they are attached to a particular component"/>
        </entry>
        <entry name="name">
         <value-info value="globalOnly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showSummary"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the summary information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showSummary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showDetail"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the detailed information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showDetail"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="The layout: &quot;table&quot; or &quot;list&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tooltip"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the message summary will be rendered as a tooltip (i"/>
        </entry>
        <entry name="name">
         <value-info value="tooltip"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnStyle"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectBooleanCheckbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectBoolean"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectBooleanCheckbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose a &quot;true&quot; or &quot;false&quot; value, presented as a&#xa;checkbox"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectBooleanCheckbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectBooleanCheckbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputText"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputText"/>
       </entry>
       <entry name="description">
        <value-info value="Renders the value of the associated UIOutput component"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputText"/>
       </entry>
       <entry name="name">
        <value-info value="outputText"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyMenu"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyMenu"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of available&#xa;options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyMenu"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyMenu"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputSecret"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputSecret"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as an HTML input tag with its type set to &quot;password&quot;"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputSecret"/>
       </entry>
       <entry name="name">
        <value-info value="inputSecret"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="redisplay"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the value will be re-sent (in plaintext) when the form&#xa;is rerendered (see JSF"/>
        </entry>
        <entry name="name">
         <value-info value="redisplay"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="maxlength"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The maximum number of characters allowed to be entered"/>
        </entry>
        <entry name="name">
         <value-info value="maxlength"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="autocomplete"/>
       <attributes>
        <entry name="description">
         <value-info value="If the value of this attribute is &quot;off&quot;, render &quot;off&quot; as the value of the attribute"/>
        </entry>
        <entry name="name">
         <value-info value="autocomplete"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The initial width of this control, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneRadio"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneRadio"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneRadio"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneRadio"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="Orientation of the options list"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="Width in pixels of the border to be drawn around the table containing the options list"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="dataTable"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIData"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlDataTable"/>
       </entry>
       <entry name="description">
        <value-info value="This component renders an HTML table element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlDataTable"/>
       </entry>
       <entry name="name">
        <value-info value="dataTable"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="summary"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a summary of the contents of the table, for&#xa;accessibility purposes"/>
        </entry>
        <entry name="name">
         <value-info value="summary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The CSS class to be applied to the Caption"/>
        </entry>
        <entry name="name">
         <value-info value="captionStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="var"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the name of the request-scope variable that will hold the current row during iteration"/>
        </entry>
        <entry name="name">
         <value-info value="var"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellpadding"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of empty space between the cell border and&#xa;its contents"/>
        </entry>
        <entry name="name">
         <value-info value="cellpadding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellspacing"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of space between the cells of the table"/>
        </entry>
        <entry name="name">
         <value-info value="cellspacing"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="bgcolor"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The background color of this element"/>
        </entry>
        <entry name="name">
         <value-info value="bgcolor"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to header cells"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="An EL expression that specifies the data model that backs this table"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to footer cells"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the desired width of the table, as a pixel length or&#xa;a percentage of available space"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionClass"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to all captions"/>
        </entry>
        <entry name="name">
         <value-info value="captionClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rules"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls how rules are rendered between cells"/>
        </entry>
        <entry name="name">
         <value-info value="rules"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rows"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the maximum number of rows of data to be displayed"/>
        </entry>
        <entry name="name">
         <value-info value="rows"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="frame"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls what part of the frame that surrounds a table is&#xa;visible"/>
        </entry>
        <entry name="name">
         <value-info value="frame"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columnClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each column"/>
        </entry>
        <entry name="name">
         <value-info value="columnClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rowClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each row"/>
        </entry>
        <entry name="name">
         <value-info value="rowClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="first"/>
       <attributes>
        <entry name="description">
         <value-info value="Defines the index of the first row to be displayed, starting from 0"/>
        </entry>
        <entry name="name">
         <value-info value="first"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="panelGrid"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIPanel"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlPanelGrid"/>
       </entry>
       <entry name="description">
        <value-info value="This element renders as an HTML table with specified number of columns"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlPanelGrid"/>
       </entry>
       <entry name="name">
        <value-info value="panelGrid"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="summary"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a summary of the contents of the table, for&#xa;accessibility purposes"/>
        </entry>
        <entry name="name">
         <value-info value="summary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The CSS class to be applied to the Caption"/>
        </entry>
        <entry name="name">
         <value-info value="captionStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columns"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies the number of columns in the grid"/>
        </entry>
        <entry name="name">
         <value-info value="columns"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellpadding"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of empty space between the cell border and&#xa;its contents"/>
        </entry>
        <entry name="name">
         <value-info value="cellpadding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="cellspacing"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the amount of space between the cells of the table"/>
        </entry>
        <entry name="name">
         <value-info value="cellspacing"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="bgcolor"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The background color of this element"/>
        </entry>
        <entry name="name">
         <value-info value="bgcolor"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to header cells"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class to be applied to footer cells"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="width"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the desired width of the table, as a pixel length or&#xa;a percentage of available space"/>
        </entry>
        <entry name="name">
         <value-info value="width"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="captionClass"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to all captions"/>
        </entry>
        <entry name="name">
         <value-info value="captionClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rules"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls how rules are rendered between cells"/>
        </entry>
        <entry name="name">
         <value-info value="rules"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="frame"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Controls what part of the frame that surrounds a table is&#xa;visible"/>
        </entry>
        <entry name="name">
         <value-info value="frame"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="columnClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each column"/>
        </entry>
        <entry name="name">
         <value-info value="columnClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rowClasses"/>
       <attributes>
        <entry name="description">
         <value-info value="A comma separated list of CSS class names to apply to td elements in&#xa;each row"/>
        </entry>
        <entry name="name">
         <value-info value="rowClasses"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="form"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIForm"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlForm"/>
       </entry>
       <entry name="description">
        <value-info value="Renders an HTML form element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlForm"/>
       </entry>
       <entry name="name">
        <value-info value="form"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="accept"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Provides a comma-separated list of content types that the&#xa;server processing this form can handle"/>
        </entry>
        <entry name="name">
         <value-info value="accept"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="prependId"/>
       <attributes>
        <entry name="name">
         <value-info value="prependId"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enctype"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The content type used to submit this form to the server"/>
        </entry>
        <entry name="name">
         <value-info value="enctype"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="acceptcharset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The list of character encodings accepted by the server for this&#xa;form"/>
        </entry>
        <entry name="name">
         <value-info value="acceptcharset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onsubmit"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when this form is submitted"/>
        </entry>
        <entry name="name">
         <value-info value="onsubmit"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onreset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when this form is reset"/>
        </entry>
        <entry name="name">
         <value-info value="onreset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputFormat"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputFormat"/>
       </entry>
       <entry name="description">
        <value-info value="Renders as text, applying the child f:param values to the value attribute as a MessageFormat string"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputFormat"/>
       </entry>
       <entry name="name">
        <value-info value="outputFormat"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="escape"/>
       <attributes>
        <entry name="description">
         <value-info value="Indicates whether rendered markup should be escaped"/>
        </entry>
        <entry name="name">
         <value-info value="escape"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectOneMenu"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectOne"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectOneMenu"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to choose one option from a set of options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectOneMenu"/>
       </entry>
       <entry name="name">
        <value-info value="selectOneMenu"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="message"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIMessage"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlMessage"/>
       </entry>
       <entry name="description">
        <value-info value="Renders text displaying information about the first FacesMessage&#xa;that is assigned to the component referenced by the &quot;for&quot; attribute"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlMessage"/>
       </entry>
       <entry name="name">
        <value-info value="message"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="showSummary"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the summary information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showSummary"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="for"/>
       <attributes>
        <entry name="required">
         <value-info value="true"/>
        </entry>
        <entry name="description">
         <value-info value="The ID of the component whose attached FacesMessage object (if present)&#xa;should be diplayed by this component"/>
        </entry>
        <entry name="name">
         <value-info value="for"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="showDetail"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the detailed information from the message should be shown"/>
        </entry>
        <entry name="name">
         <value-info value="showDetail"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="errorStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;ERROR&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="errorStyle"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="fatalClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;FATAL&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="fatalClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="infoClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for messages with severity &quot;INFO&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="infoClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tooltip"/>
       <attributes>
        <entry name="description">
         <value-info value="If true, the message summary will be rendered as a tooltip (i"/>
        </entry>
        <entry name="name">
         <value-info value="tooltip"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="warnStyle"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS style to be used for messages with severity &quot;WARN&quot;"/>
        </entry>
        <entry name="name">
         <value-info value="warnStyle"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="inputText"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIInput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlInputText"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML input element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlInputText"/>
       </entry>
       <entry name="name">
        <value-info value="inputText"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="maxlength"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The maximum number of characters allowed to be entered"/>
        </entry>
        <entry name="name">
         <value-info value="maxlength"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="alt"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies alternative text that can be used by a browser that can't show this element"/>
        </entry>
        <entry name="name">
         <value-info value="alt"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="autocomplete"/>
       <attributes>
        <entry name="description">
         <value-info value="If the value of this attribute is &quot;off&quot;, render &quot;off&quot; as the value of the attribute"/>
        </entry>
        <entry name="name">
         <value-info value="autocomplete"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The initial width of this control, in characters"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="column"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIColumn"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlColumn"/>
       </entry>
       <entry name="description">
        <value-info value="Creates a UIComponent that represents a single column of data within a parent UIData component"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlColumn"/>
       </entry>
       <entry name="name">
        <value-info value="column"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="headerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for the header"/>
        </entry>
        <entry name="name">
         <value-info value="headerClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="footerClass"/>
       <attributes>
        <entry name="description">
         <value-info value="CSS class to be used for the footer"/>
        </entry>
        <entry name="name">
         <value-info value="footerClass"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="panelGroup"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIPanel"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlPanelGroup"/>
       </entry>
       <entry name="description">
        <value-info value="This element is used to group other components where the specification requires one child element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlPanelGroup"/>
       </entry>
       <entry name="name">
        <value-info value="panelGroup"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="The type of layout markup to use when rendering this group"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyListbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyListbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of&#xa;available options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyListbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyListbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="size"/>
       <attributes>
        <entry name="description">
         <value-info value="see JSF Spec"/>
        </entry>
        <entry name="name">
         <value-info value="size"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="outputLink"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UIOutput"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlOutputLink"/>
       </entry>
       <entry name="description">
        <value-info value="Renders a HTML a element"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlOutputLink"/>
       </entry>
       <entry name="name">
        <value-info value="outputLink"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="rev"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The type(s) describing the reverse link for the linked&#xa;resource"/>
        </entry>
        <entry name="name">
         <value-info value="rev"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="type"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: A hint to the user agent about the content type of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="type"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="hreflang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The language of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="hreflang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="charset"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the character encoding of the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="charset"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="shape"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The shape of a region in a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="shape"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="coords"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The coordinates of regions within a client side image map"/>
        </entry>
        <entry name="name">
         <value-info value="coords"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="target"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Names the frame that should display content generated by invoking this action"/>
        </entry>
        <entry name="name">
         <value-info value="target"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rel"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The relationship between the current document and&#xa;the linked resource"/>
        </entry>
        <entry name="name">
         <value-info value="rel"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
     <component class="myfaces">
      <id class="string" value="selectManyCheckbox"/>
      <attributes>
       <entry name="parent-class">
        <value-info value="javax.faces.component.UISelectMany"/>
       </entry>
       <entry name="component-type">
        <value-info value="javax.faces.HtmlSelectManyCheckbox"/>
       </entry>
       <entry name="description">
        <value-info value="Allow the user to select zero or more items from a set of available options"/>
       </entry>
       <entry name="component-class">
        <value-info value="javax.faces.component.html.HtmlSelectManyCheckbox"/>
       </entry>
       <entry name="name">
        <value-info value="selectManyCheckbox"/>
       </entry>
      </attributes>
      <attribute class="myfaces">
       <id class="string" value="disabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="disabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valid"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether the component's value is currently valid, ie whether the&#xa;validators attached to this component have allowed it"/>
        </entry>
        <entry name="name">
         <value-info value="valid"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validatorMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text which will be shown if validation fails"/>
        </entry>
        <entry name="name">
         <value-info value="validatorMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="validator"/>
       <attributes>
        <entry name="description">
         <value-info value="A method-binding EL expression which is invoked during the validation phase for this&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="validator"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="lang"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The base language of this document"/>
        </entry>
        <entry name="name">
         <value-info value="lang"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="accesskey"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Sets the access key for this element"/>
        </entry>
        <entry name="name">
         <value-info value="accesskey"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="id"/>
       <attributes>
        <entry name="description">
         <value-info value="Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer&#xa;component"/>
        </entry>
        <entry name="name">
         <value-info value="id"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="valueChangeListener"/>
       <attributes>
        <entry name="description">
         <value-info value="A method which is invoked during postback processing for the current&#xa;view if the submitted value for this component is not equal to the value&#xa;which the &quot;value&quot; expression for this component returns"/>
        </entry>
        <entry name="name">
         <value-info value="valueChangeListener"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="title"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: An advisory title for this element"/>
        </entry>
        <entry name="name">
         <value-info value="title"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="style"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: CSS styling instructions"/>
        </entry>
        <entry name="name">
         <value-info value="style"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="dir"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left)"/>
        </entry>
        <entry name="name">
         <value-info value="dir"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converter"/>
       <attributes>
        <entry name="description">
         <value-info value="An expression that specifies the Converter for this component"/>
        </entry>
        <entry name="name">
         <value-info value="converter"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onblur"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element loses focus"/>
        </entry>
        <entry name="name">
         <value-info value="onblur"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="layout"/>
       <attributes>
        <entry name="description">
         <value-info value="Controls the layout direction of the child elements"/>
        </entry>
        <entry name="name">
         <value-info value="layout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="value"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets The initial value of this component"/>
        </entry>
        <entry name="name">
         <value-info value="value"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="required"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether an input value is required"/>
        </entry>
        <entry name="name">
         <value-info value="required"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="border"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the width of the border of this element, in pixels"/>
        </entry>
        <entry name="name">
         <value-info value="border"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousemove"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved while it is in this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousemove"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="converterMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when conversion of a&#xa;submitted value to the target type fails"/>
        </entry>
        <entry name="name">
         <value-info value="converterMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="enabledClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class assigned to the label element for enabled choices"/>
        </entry>
        <entry name="name">
         <value-info value="enabledClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="ondblclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is double-clicked"/>
        </entry>
        <entry name="name">
         <value-info value="ondblclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseout"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moves out of this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseout"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="transient"/>
       <attributes>
        <entry name="name">
         <value-info value="transient"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="styleClass"/>
       <attributes>
        <entry name="description">
         <value-info value="The CSS class for this element"/>
        </entry>
        <entry name="name">
         <value-info value="styleClass"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="tabindex"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies the position of this element within the tab order of the document"/>
        </entry>
        <entry name="name">
         <value-info value="tabindex"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeyup"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is released over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeyup"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onfocus"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element receives focus"/>
        </entry>
        <entry name="name">
         <value-info value="onfocus"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="label"/>
       <attributes>
        <entry name="description">
         <value-info value="A display name for this component"/>
        </entry>
        <entry name="name">
         <value-info value="label"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeydown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed down over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeydown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onkeypress"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when a key is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onkeypress"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="requiredMessage"/>
       <attributes>
        <entry name="description">
         <value-info value="Text to be displayed to the user as an error message when this component is&#xa;marked as &quot;required&quot; but no input data is present during a postback (ie the&#xa;user left the required field blank)"/>
        </entry>
        <entry name="name">
         <value-info value="requiredMessage"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="rendered"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that indicates whether this component should be rendered"/>
        </entry>
        <entry name="name">
         <value-info value="rendered"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onchange"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is modified"/>
        </entry>
        <entry name="name">
         <value-info value="onchange"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmouseover"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is moved into this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmouseover"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="immediate"/>
       <attributes>
        <entry name="description">
         <value-info value="A boolean value that identifies the phase during which action events should fire"/>
        </entry>
        <entry name="name">
         <value-info value="immediate"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="localValueSet"/>
       <attributes>
        <entry name="description">
         <value-info value="Specifies whether a local value is currently set"/>
        </entry>
        <entry name="name">
         <value-info value="localValueSet"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onselect"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Specifies a script to be invoked when the element is selected"/>
        </entry>
        <entry name="name">
         <value-info value="onselect"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="submittedValue"/>
       <attributes>
        <entry name="description">
         <value-info value="Gets the current submitted value"/>
        </entry>
        <entry name="name">
         <value-info value="submittedValue"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="binding"/>
       <attributes>
        <entry name="description">
         <value-info value="backing bean property to bind to this component instance"/>
        </entry>
        <entry name="name">
         <value-info value="binding"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onclick"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the element is clicked"/>
        </entry>
        <entry name="name">
         <value-info value="onclick"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="onmousedown"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: Script to be invoked when the pointing device is pressed over this element"/>
        </entry>
        <entry name="name">
         <value-info value="onmousedown"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="readonly"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, indicates that this component cannot be modified by the user"/>
        </entry>
        <entry name="name">
         <value-info value="readonly"/>
        </entry>
       </attributes>
      </attribute>
      <attribute class="myfaces">
       <id class="string" value="disabled"/>
       <attributes>
        <entry name="description">
         <value-info value="HTML: When true, this element cannot receive focus"/>
        </entry>
        <entry name="name">
         <value-info value="disabled"/>
        </entry>
       </attributes>
      </attribute>
     </component>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-myfaces-impl-1.2.9.jar/meta-inf/myfaces_core.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-myfaces-impl-1.2.9.jar/meta-inf/myfaces_html.tld" project="HelloWorldJSF"/>
    </library>
    <library class="faces-config">
     <id class="model-object"
      path="FileSystems/lib-myfaces-impl-1.2.9.jar/meta-inf/standard-faces-config.xml" project="HelloWorldJSF"/>
    </library>
   </libraries>
  </path>
  <path value="/HelloWorldJSF/WebContent/WEB-INF/faces-config.xml">
   <libraries>
    <library class="faces-config">
     <id class="model-object"
      path="FileSystems/WEB-INF/faces-config.xml" project="HelloWorldJSF"/>
    </library>
   </libraries>
  </path>
  <path value="D:/Programs/Tomcat7.0.53/lib/catalina-tribes.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-codec-1.3.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/servlet-api.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/jasper-el.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/HelloWorldJSF/WebContent/WEB-INF/lib/jstl-api-1.2.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-collections-3.2.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/ecj-P20140317-1600.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/annotations-api.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-util.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-logging-1.1.1.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-dbcp.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-api.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/catalina-ant.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/websocket-api.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/el-api.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-i18n-ja.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat7-websocket.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/tomcat-i18n-es.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-beanutils-1.7.0.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/jasper.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-discovery-0.4.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/catalina-ha.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/libraries/JSF 1.2 (Apache Myfaces JSF Core-1.2 API 1.2.9) (1)/myfaces-core-1.2.9-bin/lib/commons-digester-1.8.jar"/>
  <path value="D:/Programs/Tomcat7.0.53/lib/jsp-api.jar"/>
  <path value="C:/eclipse/kepler/workspace-tutorials/HelloWorldJSF/WebContent/WEB-INF/lib/jstl-impl-1.2.jar">
   <libraries>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/c-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/c-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/c.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/fmt-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/fmt-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/fmt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/fn.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/permittedtaglibs.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/scriptfree.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/sql-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/sql-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/sql.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/x-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/x-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar/meta-inf/x.tld" project="HelloWorldJSF"/>
    </library>
   </libraries>
  </path>
  <path value="D:/Programs/jstl-lib-1.2/jstl-impl-1.2.jar">
   <libraries>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/c-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/c-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/c.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/fmt-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/fmt-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/fmt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/fn.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/permittedtaglibs.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/scriptfree.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/sql-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/sql-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/sql.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/x-1_0-rt.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/x-1_0.tld" project="HelloWorldJSF"/>
    </library>
    <library class="tld">
     <id class="model-object"
      path="FileSystems/lib-jstl-impl-1.2.jar-1/meta-inf/x.tld" project="HelloWorldJSF"/>
    </library>
   </libraries>
  </path>
 </paths>
 <validation>
  <core validator-id="jsf-verification">
   <linked-resource declaration="true" name="%1;%2;%3;%4;%5;%6;" path="%0"/>
  </core>
  <el>
   <linked-el length="51" name="%7" offset="812" path="%8"/>
   <linked-el length="61" name="%7" offset="605" path="%9"/>
   <linked-el length="51" name="%7" offset="641" path="%8"/>
   <linked-el length="51" name="%10" offset="812" path="%8"/>
   <linked-el length="61" name="%10" offset="605" path="%9"/>
   <linked-el length="51" name="%10" offset="641" path="%8"/>
   <linked-el length="51" name="%11" offset="812" path="%8"/>
   <linked-el length="61" name="%11" offset="605" path="%9"/>
   <linked-el length="51" name="%11" offset="641" path="%8"/>
  </el>
 </validation>
 <aliases>
  <alias path="hello.HelloWorldJSFManagedBean" value="%3"/>
  <alias path="/welcomeToHelloWorldJSF.jsp" value="%2"/>
  <alias path="\HelloWorldJSF\WebContent\welcomeToHelloWorldJSF.jsp" value="%1"/>
  <alias path="/HelloWorldJSF/src/hello/UserFormView.java" value="%7"/>
  <alias path="/HelloWorldJSF/WebContent/WEB-INF/faces-config.xml" value="%0"/>
  <alias path="/userForm.jsp" value="%4"/>
  <alias path="/HelloWorldJSF/WebContent/welcomeToHelloWorldJSF.jsp" value="%9"/>
  <alias path="\HelloWorldJSF\src\hello\HelloWorldJSFManagedBean.java" value="%5"/>
  <alias path="\HelloWorldJSF\WebContent\userForm.jsp" value="%6"/>
  <alias path="/HelloWorldJSF/src/hello/HelloWorldJSFManagedBean.java" value="%10"/>
  <alias path="helloWorldJSFManagedBean" value="%11"/>
  <alias path="/HelloWorldJSF/WebContent/userForm.jsp" value="%8"/>
  <alias path="%7" value="/HelloWorldJSF/src/hello/UserFormView.java"/>
  <alias path="%8" value="/HelloWorldJSF/WebContent/userForm.jsp"/>
  <alias path="%5" value="\HelloWorldJSF\src\hello\HelloWorldJSFManagedBean.java"/>
  <alias path="%6" value="\HelloWorldJSF\WebContent\userForm.jsp"/>
  <alias path="%9" value="/HelloWorldJSF/WebContent/welcomeToHelloWorldJSF.jsp"/>
  <alias path="%0" value="/HelloWorldJSF/WebContent/WEB-INF/faces-config.xml"/>
  <alias path="%4" value="/userForm.jsp"/>
  <alias path="%3" value="hello.HelloWorldJSFManagedBean"/>
  <alias path="%11" value="helloWorldJSFManagedBean"/>
  <alias path="%2" value="/welcomeToHelloWorldJSF.jsp"/>
  <alias path="%10" value="/HelloWorldJSF/src/hello/HelloWorldJSFManagedBean.java"/>
  <alias path="%1" value="\HelloWorldJSF\WebContent\welcomeToHelloWorldJSF.jsp"/>
 </aliases>
 <includes/>
 <uris>
  <uri value="http://java.sun.com/jsf/html">
   <prefix>h</prefix>
  </uri>
  <uri value="http://java.sun.com/jsf/core">
   <prefix>f</prefix>
  </uri>
 </uris>
</kb-project>
